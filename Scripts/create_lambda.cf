{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Creates the API Gateway and Lambda functions for the Lambda/Java Webapp example",

    "Parameters": {
        "BaseName": {
            "Description": "Base name for all objects created by this template",
            "Type": "String"
        },
        "Bucket": {
            "Description": "Name of the bucket used by the application",
            "Type": "String"
        },
        "DynamoTable": {
            "Description": "Name of the DynamoDB table used to store metadata",
            "Type": "String"
        },
        "WebappJar": {
            "Description": "Fully-qualified path to the WebApp deployment JAR",
            "Type": "String"
        },
        "CognitoPoolId": {
            "Description": "Identifier for Cognito user pool",
            "Type": "String"
        },
        "CognitoClientId": {
            "Description": "Identifier for Cognito client",
            "Type": "String"
        }
    },

    "Resources": {

        "CloudwatchLogGroup": {
            "Type" : "AWS::Logs::LogGroup",
            "DeletionPolicy" : "Delete",
            "Properties" : {
                "LogGroupName" : { "Fn::Sub": "/aws/lambda/${BaseName}-Webapp" },
                "RetentionInDays" : 7
            }
        },


        "WebappExecutionRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "RoleName": { "Fn::Sub": "${BaseName}-WebappExecutionRole" },
                "Path": "/service-role/",
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": {
                        "Effect":   "Allow",
                        "Action":   [ "sts:AssumeRole" ],
                        "Principal": { "Service": [ "lambda.amazonaws.com" ] }
                    }
                },
                "Policies": [
                    {
                        "PolicyName":       { "Fn::Sub": "${BaseName}-LambdaCloudwatchPolicy" },
                        "PolicyDocument":   {
                            "Version":      "2012-10-17",
                            "Statement":    [
                                                {
                                                    "Effect":   "Allow",
                                                    "Action":   [ "logs:CreateLogGroup" ],
                                                    "Resource": [ { "Fn::Sub": "arn:aws:logs:*:${AWS::AccountId}:*" } ]
                                                },
                                                {
                                                    "Effect": "Allow",
                                                    "Action": [
                                                        "logs:CreateLogStream",
                                                        "logs:PutLogEvents"
                                                    ],
                                                    "Resource": [ { "Fn::Sub": "arn:aws:logs:*:${AWS::AccountId}:log-group:/aws/lambda/${BaseName}-Webapp:*" } ]
                                                }
                                            ]
                        }
                    }, {
                        "PolicyName":       { "Fn::Sub": "${BaseName}-LambdaCognitoPolicy" },
                        "PolicyDocument":   {
                            "Version":      "2012-10-17",
                            "Statement":    [
                                                {
                                                    "Effect": "Allow",
                                                    "Action": [
                                                        "cognito-idp:*"
                                                    ],
                                                    "Resource": [ { "Fn::Sub": "arn:aws:cognito-idp:*:${AWS::AccountId}:userpool/${CognitoPoolId}" } ]
                                                }
                                            ]
                        }
                    }, {
                        "PolicyName":       { "Fn::Sub": "${BaseName}-LambdaDynamoPolicy" },
                        "PolicyDocument":   {
                            "Version":      "2012-10-17",
                            "Statement":    [
                                                {
                                                    "Effect": "Allow",
                                                    "Action": [
                                                        "dynamodb:GetItem",
                                                        "dynamodb:PutItem",
                                                        "dynamodb:Query"
                                                    ],
                                                    "Resource": [ { "Fn::Sub": "arn:aws:dynamodb:*:${AWS::AccountId}:table/${DynamoTable}" } ]
                                                }
                                            ]
                        }
                    }, {
                        "PolicyName":       { "Fn::Sub": "${BaseName}-LambdaBucketPolicy" },
                        "PolicyDocument":   {
                            "Version" :     "2012-10-17",
                            "Statement":    [
                                                {
                                                    "Effect":   "Allow",
                                                    "Action":   [ "s3:List*" ],
                                                    "Resource": { "Fn::Sub": "arn:aws:s3:::${Bucket}" }
                                                },{
                                                    "Effect":   "Allow",
                                                    "Action":   [ "s3:Get*", "s3:Put*" ],
                                                    "Resource": { "Fn::Sub": "arn:aws:s3:::${Bucket}/images/*" }
                                                }
                                            ]
                        }
                    }
                ]
            }
        },

        "WebappLambdaFunction": {
            "Type":         "AWS::Lambda::Function",
            "DependsOn":    [ "WebappExecutionRole" ],
            "Properties": {
                "Description": "Implements the web-app portion of the example",
                "Runtime": "java8",
                "FunctionName": { "Fn::Sub": "${BaseName}-Webapp" },
                "Code": {
                    "S3Bucket": { "Ref": "Bucket" },
                    "S3Key":    { "Ref": "WebappJar" }
                },
                "Role": { "Fn::GetAtt" : [ "WebappExecutionRole", "Arn" ] },
                "Handler": "com.kdgregory.example.javalambda.webapp.Dispatcher::handler",
                "MemorySize": 256,
                "Timeout": 30,
                "Environment": {
                    "Variables": {
                        "COGNITO_POOL_ID":   { "Ref": "CognitoPoolId" },
                        "COGNITO_CLIENT_ID": { "Ref": "CognitoClientId" },
                        "DYNAMO_TABLE":      { "Ref": "DynamoTable" },
                        "S3_IMAGE_BUCKET":   { "Ref": "Bucket" },
                        "S3_IMAGE_PREFIX":   "images"
                    }
                }
            }
        },

        "GatewayLambdaPermission": {
            "Type":                 "AWS::Lambda::Permission",
            "DependsOn":            [ "WebappLambdaFunction" ],
            "Properties": {
                "Action":           "lambda:InvokeFunction",
                "FunctionName":     { "Fn::GetAtt": ["WebappLambdaFunction", "Arn"] },
                "Principal":        "apigateway.amazonaws.com"
            }
        },

        "GatewayBucketRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "RoleName": { "Fn::Sub": "${BaseName}-GatewayBucketRole" },
                "Path": "/service-role/",
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": {
                        "Effect":   "Allow",
                        "Action":   [ "sts:AssumeRole" ],
                        "Principal": { "Service": [ "apigateway.amazonaws.com" ] }
                    }
                },
                "Policies": [
                    {
                        "PolicyName":       { "Fn::Sub": "${BaseName}-GatewayBucketPolicy" },
                        "PolicyDocument": {
                            "Version" :     "2012-10-17",
                            "Statement": [{
                                "Effect":   "Allow",
                                "Action":   [ "s3:Get*" ],
                                "Resource": { "Fn::Sub": "arn:aws:s3:::${Bucket}/*" }
                            }]
                        }
                    }
                ]
            }
        },

        "Gateway": {
            "Type":             "AWS::ApiGateway::RestApi",
            "Properties": {
                "Name":             { "Fn::Sub": "${BaseName}" },
                "Description":      "A photo-sharing API fronting Lambda and S3",
                "Body":             {
                                      "swagger": "2.0",
                                      "paths": {
                                        "/": {
                                          "get": {
                                            "produces": [
                                              "text/html"
                                            ],
                                            "responses": {
                                              "200": {
                                                "description": "200 response",
                                                "schema": {
                                                  "$ref": "#/definitions/Empty"
                                                }
                                              }
                                            },
                                            "x-amazon-apigateway-integration": {
                                              "credentials": "arn:aws:iam::717623742438:role/service-role/LambdaPhoto-GatewayBucketRole",
                                              "responses": {
                                                "default": {
                                                  "statusCode": "200"
                                                }
                                              },
                                              "uri": "arn:aws:apigateway:us-east-1:s3:path/com-kdgregory-example/static/index.html",
                                              "passthroughBehavior": "when_no_match",
                                              "httpMethod": "GET",
                                              "type": "aws"
                                            }
                                          }
                                        },
                                        "/api/{action}": {
                                          "get": {
                                            "produces": [
                                              "application/json"
                                            ],
                                            "parameters": [
                                              {
                                                "name": "action",
                                                "in": "path",
                                                "required": true,
                                                "type": "string"
                                              }
                                            ],
                                            "responses": {
                                              "200": {
                                                "description": "200 response",
                                                "schema": {
                                                  "$ref": "#/definitions/Empty"
                                                }
                                              }
                                            },
                                            "x-amazon-apigateway-integration": {
                                              "uri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:717623742438:function:LambdaPhoto-Webapp/invocations",
                                              "passthroughBehavior": "when_no_match",
                                              "httpMethod": "POST",
                                              "type": "aws_proxy"
                                            }
                                          },
                                          "post": {
                                            "produces": [
                                              "application/json"
                                            ],
                                            "parameters": [
                                              {
                                                "name": "action",
                                                "in": "path",
                                                "required": true,
                                                "type": "string"
                                              }
                                            ],
                                            "responses": {
                                              "200": {
                                                "description": "200 response",
                                                "schema": {
                                                  "$ref": "#/definitions/Empty"
                                                }
                                              }
                                            },
                                            "x-amazon-apigateway-integration": {
                                              "uri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:717623742438:function:LambdaPhoto-Webapp/invocations",
                                              "passthroughBehavior": "when_no_match",
                                              "httpMethod": "POST",
                                              "type": "aws_proxy"
                                            }
                                          }
                                        },
                                        "/css/{file}": {
                                          "get": {
                                            "produces": [
                                              "text/css"
                                            ],
                                            "parameters": [
                                              {
                                                "name": "file",
                                                "in": "path",
                                                "required": true,
                                                "type": "string"
                                              }
                                            ],
                                            "responses": {
                                              "200": {
                                                "description": "200 response",
                                                "schema": {
                                                  "$ref": "#/definitions/Empty"
                                                }
                                              }
                                            },
                                            "x-amazon-apigateway-integration": {
                                              "credentials": "arn:aws:iam::717623742438:role/service-role/LambdaPhoto-GatewayBucketRole",
                                              "responses": {
                                                "default": {
                                                  "statusCode": "200"
                                                }
                                              },
                                              "requestParameters": {
                                                "integration.request.path.file": "method.request.path.file"
                                              },
                                              "uri": "arn:aws:apigateway:us-east-1:s3:path/com-kdgregory-example/static/css/{file}",
                                              "passthroughBehavior": "when_no_templates",
                                              "httpMethod": "GET",
                                              "type": "aws"
                                            }
                                          }
                                        },
                                        "/images/{file}/{size}": {
                                          "get": {
                                            "produces": [
                                              "image/jpeg",
                                              "image/png",
                                              "image/gif"
                                            ],
                                            "parameters": [
                                              {
                                                "name": "file",
                                                "in": "path",
                                                "required": true,
                                                "type": "string"
                                              },
                                              {
                                                "name": "size",
                                                "in": "path",
                                                "required": true,
                                                "type": "string"
                                              }
                                            ],
                                            "responses": {
                                              "200": {
                                                "description": "200 response",
                                                "schema": {
                                                  "$ref": "#/definitions/Empty"
                                                },
                                                "headers": {
                                                  "Content-Type": {
                                                    "type": "string"
                                                  },
                                                  "ETag": {
                                                    "type": "string"
                                                  }
                                                }
                                              }
                                            },
                                            "x-amazon-apigateway-integration": {
                                              "credentials": "arn:aws:iam::717623742438:role/service-role/LambdaPhoto-GatewayBucketRole",
                                              "responses": {
                                                "default": {
                                                  "statusCode": "200",
                                                  "responseParameters": {
                                                    "method.response.header.Content-Type": "integration.response.header.Content-Type",
                                                    "method.response.header.ETag": "integration.response.header.ETag"
                                                  },
                                                  "contentHandling": "CONVERT_TO_BINARY"
                                                }
                                              },
                                              "requestParameters": {
                                                "integration.request.path.file": "method.request.path.file",
                                                "integration.request.path.size": "method.request.path.size"
                                              },
                                              "uri": "arn:aws:apigateway:us-east-1:s3:path/com-kdgregory-example/images/{file}/{size}",
                                              "passthroughBehavior": "when_no_templates",
                                              "httpMethod": "GET",
                                              "type": "aws"
                                            }
                                          }
                                        },
                                        "/js/{file}": {
                                          "get": {
                                            "produces": [
                                              "text/javascript"
                                            ],
                                            "parameters": [
                                              {
                                                "name": "file",
                                                "in": "path",
                                                "required": true,
                                                "type": "string"
                                              }
                                            ],
                                            "responses": {
                                              "200": {
                                                "description": "200 response",
                                                "schema": {
                                                  "$ref": "#/definitions/Empty"
                                                }
                                              }
                                            },
                                            "x-amazon-apigateway-integration": {
                                              "credentials": "arn:aws:iam::717623742438:role/service-role/LambdaPhoto-GatewayBucketRole",
                                              "responses": {
                                                "default": {
                                                  "statusCode": "200"
                                                }
                                              },
                                              "requestParameters": {
                                                "integration.request.path.file": "method.request.path.file"
                                              },
                                              "uri": "arn:aws:apigateway:us-east-1:s3:path/com-kdgregory-example/static/js/{file}",
                                              "passthroughBehavior": "when_no_match",
                                              "httpMethod": "GET",
                                              "type": "aws"
                                            }
                                          }
                                        },
                                        "/templates/{file}": {
                                          "get": {
                                            "produces": [
                                              "text/html"
                                            ],
                                            "parameters": [
                                              {
                                                "name": "file",
                                                "in": "path",
                                                "required": true,
                                                "type": "string"
                                              }
                                            ],
                                            "responses": {
                                              "200": {
                                                "description": "200 response",
                                                "schema": {
                                                  "$ref": "#/definitions/Empty"
                                                }
                                              }
                                            },
                                            "x-amazon-apigateway-integration": {
                                              "credentials": "arn:aws:iam::717623742438:role/service-role/LambdaPhoto-GatewayBucketRole",
                                              "responses": {
                                                "default": {
                                                  "statusCode": "200"
                                                }
                                              },
                                              "requestParameters": {
                                                "integration.request.path.file": "method.request.path.file"
                                              },
                                              "uri": "arn:aws:apigateway:us-east-1:s3:path/com-kdgregory-example/static/templates/{file}",
                                              "passthroughBehavior": "when_no_match",
                                              "httpMethod": "GET",
                                              "type": "aws"
                                            }
                                          }
                                        }
                                      },
                                      "definitions": {
                                        "Empty": {
                                          "type": "object",
                                          "title": "Empty Schema"
                                        }
                                      },
                                      "x-amazon-apigateway-binary-media-types": [
                                        "image/*"
                                      ]
                                    }
            }
        },


        "GatewayDeployment": {
            "Type":                 "AWS::ApiGateway::Deployment",
            "Properties": {
                "Description":      "Test deployment of the LambdaPhoto API",
                "RestApiId":        { "Ref": "Gateway" },
                "StageName":        "test",
                "StageDescription": {
                }
            }
        }
    }
}
