{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Creates the API Gateway and Lambda functions for the Lambda/Java Webapp example",

    "Parameters": {
        "BaseName": {
            "Description": "Base name for all objects created by this template",
            "Type": "String"
        },
        "Bucket": {
            "Description": "Name of the bucket used by the application",
            "Type": "String"
        },
        "WebappJar": {
            "Description": "Fully-qualified path to the WebApp deployment JAR",
            "Type": "String"
        }
    },

    "Resources": {

        "CloudwatchLogGroup": {
            "Type" : "AWS::Logs::LogGroup",
            "DeletionPolicy" : "Delete",
            "Properties" : {
                "LogGroupName" : { "Fn::Sub": "/aws/lambda/${BaseName}-Webapp" },
                "RetentionInDays" : 7
            }
        },

        "CloudwatchLoggingPolicy": {
            "Type": "AWS::IAM::ManagedPolicy",
            "Properties": {
                "Description": "Allows creation of a logstream and writing of logging events",
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect":   "Allow",
                            "Action":   [ "logs:CreateLogGroup" ],
                            "Resource": [ { "Fn::Sub": "arn:aws:logs:*:${AWS::AccountId}:*" } ]
                        },
                        {
                            "Effect": "Allow",
                            "Action": [
                                "logs:CreateLogStream",
                                "logs:PutLogEvents"
                            ],
                            "Resource": [ { "Fn::Sub": "arn:aws:logs:*:${AWS::AccountId}:log-group:/aws/lambda/${BaseName}-Webapp:*" } ]
                        }
                    ]
                }
            }
        },

        "WebappExecutionRole": {
            "Type": "AWS::IAM::Role",
            "DependsOn": [ "CloudwatchLoggingPolicy" ],
            "Properties": {
                "RoleName": { "Fn::Sub": "${BaseName}-WebappExecutionRole" },
                "Path": "/service-role/",
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": {
                        "Effect":   "Allow",
                        "Action":   [ "sts:AssumeRole" ],
                        "Principal": { "Service": [ "lambda.amazonaws.com" ] }
                    }
                },
                "ManagedPolicyArns": [
                    { "Ref" : "CloudwatchLoggingPolicy" }
                ]
            }
        },

        "WebappLambdaFunction": {
            "Type":         "AWS::Lambda::Function",
            "DependsOn":    [ "WebappExecutionRole" ],
            "Properties": {
                "Description": "Implements the web-app portion of the example",
                "Runtime": "java8",
                "FunctionName": { "Fn::Sub": "${BaseName}-Webapp" },
                "Code": {
                    "S3Bucket": { "Ref": "Bucket" },
                    "S3Key":    { "Ref": "WebappJar" }
                },
                "Handler": "com.kdgregory.example.javalambda.webapp.Dispatcher::handler",
                "MemorySize": 256,
                "Timeout": 15,
                "Role": { "Fn::GetAtt" : [ "WebappExecutionRole", "Arn" ] }
            }
        },

        "GatewayLambdaPermission": {
            "Type":                 "AWS::Lambda::Permission",
            "DependsOn":            [ "WebappLambdaFunction" ],
            "Properties": {
                "Action":           "lambda:InvokeFunction",
                "FunctionName":     { "Fn::GetAtt": ["WebappLambdaFunction", "Arn"] },
                "Principal":        "apigateway.amazonaws.com"
            }
        },

        "GatewayBucketRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "RoleName": { "Fn::Sub": "${BaseName}-GatewayBucketRole" },
                "Path": "/service-role/",
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": {
                        "Effect":   "Allow",
                        "Action":   [ "sts:AssumeRole" ],
                        "Principal": { "Service": [ "apigateway.amazonaws.com" ] }
                    }
                },
                "Policies": [ {
                    "PolicyName":       { "Fn::Sub": "${BaseName}-GatewayBucketPolicy" },
                    "PolicyDocument": {
                        "Version" :     "2012-10-17",
                        "Statement": [{
                            "Effect":   "Allow",
                            "Action":   [ "s3:GetObject" ],
                            "Resource": { "Fn::Sub": "arn:aws:s3:::${Bucket}/*" }
                        }]
                    }}
                ]
            }
        },

        "Gateway": {
            "Type":             "AWS::ApiGateway::RestApi",
            "Properties": {
                "Name":         { "Fn::Sub": "${BaseName}" },
                "Description":  "A photo-sharing API fronting Lambda and S3"
            }
        },

        "GatewayAPIPathRoot": {
            "Type":             "AWS::ApiGateway::Resource",
            "Properties": {
                "RestApiId":    { "Ref": "Gateway" },
                "ParentId":     { "Fn::GetAtt": ["Gateway", "RootResourceId"] },
                "PathPart":     "api"
            }
        },

        "GatewayAPIPathAction": {
            "Type":             "AWS::ApiGateway::Resource",
            "Properties": {
                "RestApiId":    { "Ref": "Gateway" },
                "ParentId":     { "Ref": "GatewayAPIPathRoot" },
                "PathPart":     "{action}"
            }
        },

        "GatewayAPIMethod": {
            "Type":                 "AWS::ApiGateway::Method",
            "DependsOn":            [ "Gateway", "WebappLambdaFunction" ],
            "Properties": {
                "RestApiId":        { "Ref": "Gateway" },
                "ResourceId":       { "Ref": "GatewayAPIPathAction" },
                "HttpMethod":       "POST",
                "AuthorizationType": "NONE",
                "RequestParameters": {
                    "method.request.path.action": true
                },
                "Integration": {
                    "IntegrationHttpMethod":    "POST",
                    "Type":                     "AWS_PROXY",
                    "Uri":                      { "Fn::Join": ["", [
                                                    "arn:aws:apigateway:",
                                                    { "Ref" : "AWS::Region" },
                                                    ":lambda:path/2015-03-31/functions/",
                                                    { "Fn::GetAtt": ["WebappLambdaFunction", "Arn"] },
                                                    "/invocations"
                                                ]]}
                },
                "MethodResponses": [
                    {
                        "StatusCode":               "200",
                        "ResponseModels": {
                            "application/json":     "Empty"
                        }
                    }
                ]
            }
        },

        "GatewayRootGet": {
            "Type":                             "AWS::ApiGateway::Method",
            "DependsOn":                        [ "Gateway" ],
            "Properties": {
                "RestApiId":                    { "Ref": "Gateway" },
                "ResourceId":                   { "Fn::GetAtt": ["Gateway", "RootResourceId"] },
                "HttpMethod":                   "GET",
                "AuthorizationType":            "NONE",
                "Integration": {
                    "IntegrationHttpMethod":    "GET",
                    "Type":                     "AWS",
                    "Uri":                      { "Fn::Join": ["", [
                                                    "arn:aws:apigateway:",
                                                    { "Ref" : "AWS::Region" },
                                                    { "Fn::Sub": ":s3:path/${Bucket}/static/index.html" }
                                                ]]},
                    "Credentials":              {"Fn::GetAtt" : ["GatewayBucketRole", "Arn"] },
                    "IntegrationResponses":     [
                                                    { "StatusCode": "200" }
                                                ],
                    "PassthroughBehavior":      "WHEN_NO_MATCH"
                },
                "MethodResponses": [
                    {
                        "StatusCode":           "200",
                        "ResponseModels": {
                            "text/html":  "Empty"
                        }
                    }
                ]
            }
        },

        "GatewayStaticPathCSS": {
            "Type":             "AWS::ApiGateway::Resource",
            "Properties": {
                "RestApiId":    { "Ref": "Gateway" },
                "ParentId":     { "Fn::GetAtt": ["Gateway", "RootResourceId"] },
                "PathPart":     "css"
            }
        },

        "GatewayStaticPathCSSFile": {
            "Type":             "AWS::ApiGateway::Resource",
            "Properties": {
                "RestApiId":    { "Ref": "Gateway" },
                "ParentId":     { "Ref": "GatewayStaticPathCSS" },
                "PathPart":     "{file}"
            }
        },

        "GatewayStaticPathCSSFileGet": {
            "Type":                             "AWS::ApiGateway::Method",
            "DependsOn":                        [ "Gateway" ],
            "Properties": {
                "RestApiId":                    { "Ref": "Gateway" },
                "ResourceId":                   { "Ref": "GatewayStaticPathCSSFile" },
                "HttpMethod":                   "GET",
                "AuthorizationType":            "NONE",
                "RequestParameters":            {
                                                "method.request.path.file": true
                },
                "Integration":                  {
                    "IntegrationHttpMethod":    "GET",
                    "Type":                     "AWS",
                    "Uri":                      { "Fn::Join": ["", [
                                                    "arn:aws:apigateway:",
                                                    { "Ref" : "AWS::Region" },
                                                    { "Fn::Sub": ":s3:path/${Bucket}/static/css/{file}" }
                                                ]]},
                    "RequestParameters":        { 
                                                "integration.request.path.file": "method.request.path.file"
                                                },
                    "Credentials":              {"Fn::GetAtt" : ["GatewayBucketRole", "Arn"] },
                    "IntegrationResponses":     [
                                                    { "StatusCode": "200" }
                                                ],
                    "PassthroughBehavior":      "WHEN_NO_MATCH"
                },
                "MethodResponses": [
                    {
                        "StatusCode":           "200",
                        "ResponseModels": {
                            "text/css":  "Empty"
                        }
                    }
                ]
            }
        },

        "GatewayStaticPathJS": {
            "Type":             "AWS::ApiGateway::Resource",
            "Properties": {
                "RestApiId":    { "Ref": "Gateway" },
                "ParentId":     { "Fn::GetAtt": ["Gateway", "RootResourceId"] },
                "PathPart":     "js"
            }
        },

        "GatewayStaticPathJSFile": {
            "Type":             "AWS::ApiGateway::Resource",
            "Properties": {
                "RestApiId":    { "Ref": "Gateway" },
                "ParentId":     { "Ref": "GatewayStaticPathJS" },
                "PathPart":     "{file}"
            }
        },

        "GatewayStaticPathJSFileGet": {
            "Type":                             "AWS::ApiGateway::Method",
            "DependsOn":                        [ "Gateway" ],
            "Properties": {
                "RestApiId":                    { "Ref": "Gateway" },
                "ResourceId":                   { "Ref": "GatewayStaticPathJSFile" },
                "HttpMethod":                   "GET",
                "AuthorizationType":            "NONE",
                "RequestParameters":            {
                                                "method.request.path.file": true
                },
                "Integration":                  {
                    "IntegrationHttpMethod":    "GET",
                    "Type":                     "AWS",
                    "Uri":                      { "Fn::Join": ["", [
                                                    "arn:aws:apigateway:",
                                                    { "Ref" : "AWS::Region" },
                                                    { "Fn::Sub": ":s3:path/${Bucket}/static/js/{file}" }
                                                ]]},
                    "RequestParameters":        { 
                                                "integration.request.path.file": "method.request.path.file"
                                                },
                    "Credentials":              {"Fn::GetAtt" : ["GatewayBucketRole", "Arn"] },
                    "IntegrationResponses":     [
                                                    { "StatusCode": "200" }
                                                ],
                    "PassthroughBehavior":      "WHEN_NO_MATCH"
                },
                "MethodResponses": [
                    {
                        "StatusCode":           "200",
                        "ResponseModels": {
                            "text/javascript":  "Empty"
                        }
                    }
                ]
            }
        },

        "GatewayStaticPathTemplates": {
            "Type":             "AWS::ApiGateway::Resource",
            "Properties": {
                "RestApiId":    { "Ref": "Gateway" },
                "ParentId":     { "Fn::GetAtt": ["Gateway", "RootResourceId"] },
                "PathPart":     "templates"
            }
        },

        "GatewayStaticPathTemplatesFile": {
            "Type":             "AWS::ApiGateway::Resource",
            "Properties": {
                "RestApiId":    { "Ref": "Gateway" },
                "ParentId":     { "Ref": "GatewayStaticPathTemplates" },
                "PathPart":     "{file}"
            }
        },

        "GatewayStaticPathTemplatesFileGet": {
            "Type":                             "AWS::ApiGateway::Method",
            "DependsOn":                        [ "Gateway" ],
            "Properties": {
                "RestApiId":                    { "Ref": "Gateway" },
                "ResourceId":                   { "Ref": "GatewayStaticPathTemplatesFile" },
                "HttpMethod":                   "GET",
                "AuthorizationType":            "NONE",
                "RequestParameters":            {
                                                "method.request.path.file": true
                },
                "Integration":                  {
                    "IntegrationHttpMethod":    "GET",
                    "Type":                     "AWS",
                    "Uri":                      { "Fn::Join": ["", [
                                                    "arn:aws:apigateway:",
                                                    { "Ref" : "AWS::Region" },
                                                    { "Fn::Sub": ":s3:path/${Bucket}/static/templates/{file}" }
                                                ]]},
                    "RequestParameters":        { 
                                                "integration.request.path.file": "method.request.path.file"
                                                },
                    "Credentials":              {"Fn::GetAtt" : ["GatewayBucketRole", "Arn"] },
                    "IntegrationResponses":     [
                                                    { "StatusCode": "200" }
                                                ],
                    "PassthroughBehavior":      "WHEN_NO_MATCH"
                },
                "MethodResponses": [
                    {
                        "StatusCode":           "200",
                        "ResponseModels": {
                            "text/html":  "Empty"
                        }
                    }
                ]
            }
        },

        "GatewayDeployment": {
            "Type":                 "AWS::ApiGateway::Deployment",
            "DependsOn":            [ "GatewayAPIMethod" ],
            "Properties": {
                "Description":      "Test deployment of the LambdaPhoto API",
                "RestApiId":        { "Ref": "Gateway" },
                "StageName":        "test",
                "StageDescription": {
                }
            }
        }
    }
}
